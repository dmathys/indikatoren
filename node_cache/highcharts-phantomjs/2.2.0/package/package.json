{"name":"highcharts-phantomjs","version":"2.2.0","description":"PhantomJS script to convert SVG or Highcharts JSON options objects to chart images","main":"server.js","bin":{"highcharts-phantomjs":"server.js"},"scripts":{"start":"node ./server.js start","lint":"eslint **/*.js","test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/nfantone/highcharts-export-server.git"},"keywords":["highcharts","charts","graphs","images","convert","export","png","svg","phantomjs"],"author":{"name":"Gert Vaartjes","email":"@GertVaartjes","url":"https://github.com/gvaartjes"},"contributors":[{"name":"NicolÃ¡s Fantone","email":"nfantone@gmail.com","url":"https://github.com/nfantone"}],"files":["server.js","lib/"],"engines":{"node":">=4.0.0"},"license":"MIT","bugs":{"url":"https://github.com/nfantone/highcharts-export-server/issues"},"homepage":"https://github.com/nfantone/highcharts-export-server#readme","dependencies":{"highcharts":"^4.2.6","phantomjs-prebuilt":"^2.1.12","winston":"^2.2.0","yargs":"^5.0.0"},"optionalDependencies":{"phantomjs-prebuilt":"^2.1.12","winston":"^2.2.0","yargs":"^5.0.0"},"devDependencies":{"eslint":"^3.4.0","eslint-config-semistandard":"^7.0.0-beta.0","eslint-config-standard":"^6.0.0","eslint-plugin-promise":"^2.0.1","eslint-plugin-standard":"^2.0.0"},"readme":"# ![highcharts](https://www.dropbox.com/s/3se8pnb23b4csay/highcharts.png?raw=1)\n\n[![Build Status](https://travis-ci.org/nfantone/highcharts-export-server.svg?branch=develop)](https://travis-ci.org/nfantone/highcharts-export-server)\n\nThe file `lib/highcharts-convert.js` is a [PhantomJS](http://phantomjs.org/) script to convert SVG or Highcharts JSON options objects to chart images. It is ideal for batch processing Highcharts configurations for attaching to emails or reports. An online demo with a GUI can be viewed at [export.highcharts.com/demo](http://export.highcharts.com/demo).\n\n> **Note**  The Highcharts files are subjected to the Highcharts License.\n\n## Installation\n\n- You can just install the module globally (preferred) or locally, and run it as a service.\n\n```sh\n# Global\nsudo npm install -g highcharts-phantomjs\nhighcharts-phantomjs start\ninfo: [highcharts-convert]    Started converter on 127.0.0.1:3030 (PID: 9351)\n\n# Local\nnpm install highcharts-phantomjs\ncd node_modules/highcharts-phantomjs\nnpm start\ninfo: [highcharts-convert]    Started converter on 127.0.0.1:3030 (PID: 8342)\n```\n\n- Alternatively, you could clone this repository and run `phantomjs` manually.\n\n```sh\ngit clone https://github.com/nfantone/highcharts-export-server\ncd highcharts-export-server\nnpm install --production --no-optional\nphantomjs lib/highcharts-convert.js -host 127.0.0.1 -port 3030\n```\n\n> For this option to work, you need to have `phantomjs` binary in your PATH (see http://phantomjs.org/download.html).\n\n## Usage\n\n```sh\nUsage: highcharts-phantomjs start [-h HOST][-p PORT] -- [options]\n\nCommands:\n  start  Starts highcharts-convert HTTP server\n\nOptions:\n  -h, --hostname, --host  Hostname of the server          [default: \"127.0.0.1\"]\n  -p, --port              Port the server will listen on         [default: 3030]\n  --help                  Show help                                    [boolean]\n  --version               Show version number                          [boolean]\n```\n\n\n### Options\n\nBesides `-h` (hostname) and `-p` (port number), any other arguments specified after `--` will be passed as is to the `phantomjs` script on `lib/highcharts-convert.js`.\n\nThe following are all the available options.\n\n##### `-infile`\nThe file to convert, assumes it's either a JSON file, the script checks for the input file to have the extension '.json', or otherwise it assumes it to be an svg file.\n\n##### `-outfile`\nThe file to output. Must be a filename with the extension .jpg, .png .pdf or .svg.\n\n##### `-scale`\nTo set the zoomFactor of the page rendered by PhantomJS. For example, if the _chart.width_ option in the chart configuration is set to 600 and the scale is set to 2, the output raster image will have a pixel width of 1200. So this is a convenient way of increasing the resolution without decreasing the font size and line widths in the chart. This is ignored if the _-width_ parameter is set.\n\n##### `-width`\nSet the exact pixel width of the exported image or pdf. This overrides the _-scale_ parameter.\n\n##### `-constr`\nThe constructor name. Can be one of _Chart_ or _StockChart_. This depends on whether you want to generate Highstock or basic Highcharts.\n\n##### `-callback`\nFilename of the _callback_. The _callback_ is a function which will be called in the constructor of Highcharts to be executed on chart load. All code of the callback must be enclosed by a function. See this example of contents of the callback file:\n\n```javascript\nfunction(chart) {\n    chart.renderer.arc(200, 150, 100, 50, -Math.PI, 0).attr({\n        fill : '#FCFFC5',\n        stroke : 'black',\n        'stroke-width' : 1\n     }).add();\n}\n```\n\n### API\nAfter starting the converter server, it will listen for `POST` request. You can use the same parameters as for command line usage, but wrap them in a JSON structure.\n\nHere is an example of a valid request, given a JSON body in some file:\n\n```javascript\n// example-request.json\n{\n    \"infile\": \"{xAxis: {categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']},series: [{data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]}]};\",\n    \"callback\": \"function(chart) {chart.renderer.arc(200, 150, 100, 50, -Math.PI, 0).attr({fill : '#FCFFC5',stroke : 'black','stroke-width' : 1}).add();}\",\n    \"constr\": \"Chart\"\n}\n```\n\n```sh\nhighcharts-phantomjs start -p 3003\ninfo: [highcharts-convert]    Started converter on 127.0.0.1:3030 (PID: 1350)\n\n# On another terminal\ncurl -XPOST http://localhost:3003 -H 'Content-Type: application/json' -d @example-request.json\n```\n","readmeFilename":"README.md","_id":"highcharts-phantomjs@2.2.0","_shasum":"844bb6aa8189ba28d0c4fd3a91029932380509e3","_resolved":"file:node_shrinkwrap/highcharts-phantomjs-2.2.0.tar","_from":"node_shrinkwrap/highcharts-phantomjs-2.2.0.tar"}